// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`basic-component given basic component *with* tailwindcss styles but minify and strip enabled, should keep css 1`] = `
"/* eslint-disable */
import { registerInstance as __stencil_registerInstance } from \\"@stencil/core\\";
import { Component, Host, h } from \\"@stencil/core\\";
import basicComponentStyle from \\"./basic-component.css?tag=basic-component&encapsulation=shadow\\";
export const BasicComponent = class {
    constructor(hostRef) {
        __stencil_registerInstance(this, hostRef);
    }
    render() {
        return (h(Host, null, h(\\"div\\", { class: \\"flex flex-col bg-[#343da3] text-[3em] text-[#dedede] w-6/12 transform transition duration-500 hover:scale-110\\" }, h(\\"slot\\", null))));
    }
};
BasicComponent.style = basicComponentStyle + '*,:after,:before{--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-transform:translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;border:0 solid;box-sizing:border-box}.flex{display:flex}.w-6\\\\\\\\/12{width:50%}.transform{transform:var(--tw-transform)}.flex-col{flex-direction:column}.bg-\\\\\\\\[\\\\\\\\#343da3\\\\\\\\]{--tw-bg-opacity:1;background-color:rgba(52,61,163,var(--tw-bg-opacity))}.text-\\\\\\\\[3em\\\\\\\\]{font-size:3em}.text-\\\\\\\\[\\\\\\\\#dedede\\\\\\\\]{--tw-text-opacity:1;color:rgba(222,222,222,var(--tw-text-opacity))}.shadow{--tw-shadow:0 1px 3px 0 rgba(0,0,0,0.1),0 1px 2px 0 rgba(0,0,0,0.06);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.transition{transition-duration:.15s;transition-property:background-color,border-color,color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:background-color,border-color,color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:background-color,border-color,color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1)}.duration-500{transition-duration:.5s}.hover\\\\\\\\:scale-110:hover{--tw-scale-x:1.1;--tw-scale-y:1.1;transform:var(--tw-transform)}';
"
`;

exports[`basic-component given basic component *with* tailwindcss styles but minify disabled, should keep css 1`] = `
"/* eslint-disable */
import { registerInstance as __stencil_registerInstance } from \\"@stencil/core\\";
import { Component, Host, h } from \\"@stencil/core\\";
import basicComponentStyle from \\"./basic-component.css?tag=basic-component&encapsulation=shadow\\";
export const BasicComponent = class {
    constructor(hostRef) {
        __stencil_registerInstance(this, hostRef);
    }
    render() {
        return (h(Host, null, h(\\"div\\", { class: \\"flex flex-col bg-[#343da3] text-[3em] text-[#dedede] w-6/12 transform transition duration-500 hover:scale-110\\" }, h(\\"slot\\", null))));
    }
};
BasicComponent.style = basicComponentStyle + '/*! tailwindcss v2.2.9 | MIT License | https://tailwindcss.com *//*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize *//*Document========*//**Use a better box model (opinionated).*/*,::before,::after { box-sizing: border-box;}/**Use a more readable tab size (opinionated).*//**1. Correct the line height in all browsers.2. Prevent adjustments of font size after orientation changes in iOS.*//*Sections========*//**Remove the margin in all browsers.*//**Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)*//*Grouping content================*//**1. Add the correct height in Firefox.2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)*//*Text-level semantics====================*//**Add the correct text decoration in Chrome, Edge, and Safari.*//**Add the correct font weight in Edge and Safari.*//**1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)2. Correct the odd \\"em\\" font sizing in all browsers.*//**Add the correct font size in all browsers.*//**Prevent \\"sub\\" and \\"sup\\" elements from affecting the line height in all browsers.*//*Tabular data============*//**1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)*//*Forms=====*//**1. Change the font styles in all browsers.2. Remove the margin in Firefox and Safari.*//**Remove the inheritance of text transform in Edge and Firefox.1. Remove the inheritance of text transform in Firefox.*//**Correct the inability to style clickable types in iOS and Safari.*//**Remove the inner border and padding in Firefox.*//**Restore the focus styles unset by the previous rule.*//**Remove the additional \\":invalid\\" styles in Firefox.See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737*//**Remove the padding so developers are not caught out when they zero out \\"fieldset\\" elements in all browsers.*//**Add the correct vertical alignment in Chrome and Firefox.*//**Correct the cursor style of increment and decrement buttons in Safari.*//**1. Correct the odd appearance in Chrome and Safari.2. Correct the outline style in Safari.*//**Remove the inner padding in Chrome and Safari on macOS.*//**1. Correct the inability to style clickable types in iOS and Safari.2. Change font properties to \\"inherit\\" in Safari.*//*Interactive===========*//*Add the correct display in Chrome and Safari.*//** * Manually forked from SUIT CSS Base: https://github.com/suitcss/base * A thin layer on top of normalize.css that provides a starting point more * suitable for web applications. *//** * Removes the default spacing and border for appropriate elements. *//** * Tailwind custom reset styles *//** * 1. Use the user\\"s configured \\\\\\\\\`sans\\\\\\\\\` font-family (with Tailwind\\"s default *    sans-serif font stack as a fallback) as a sane default. * 2. Use Tailwind\\"s default \\"normal\\" line-height so the user isn\\"t forced *    to override it to ensure consistency even when using the default theme. *//** * Inherit font-family and line-height from \\\\\\\\\`html\\\\\\\\\` so users can set them as * a class directly on the \\\\\\\\\`html\\\\\\\\\` element. *//** * 1. Prevent padding and border from affecting element width. * *    We used to set this in the html element and inherit from *    the parent element for everything else. This caused issues *    in shadow-dom-enhanced elements like <details> where the content *    is wrapped by a div with box-sizing set to \\\\\\\\\`content-box\\\\\\\\\`. * *    https://github.com/mozdevs/cssremedy/issues/4 * * * 2. Allow adding a border to an element by just adding a border-width. * *    By default, the way the browser specifies that an element should have no *    border is by setting it\\"s border-style to \\\\\\\\\`none\\\\\\\\\` in the user-agent *    stylesheet. * *    In order to easily add borders to elements by just setting the \\\\\\\\\`border-width\\\\\\\\\` *    property, we change the default border-style for all elements to \\\\\\\\\`solid\\\\\\\\\`, and *    use border-width to hide them instead. This way our \\\\\\\\\`border\\\\\\\\\` utilities only *    need to set the \\\\\\\\\`border-width\\\\\\\\\` property instead of the entire \\\\\\\\\`border\\\\\\\\\` *    shorthand, making our border utilities much more straightforward to compose. * *    https://github.com/tailwindcss/tailwindcss/pull/116 */*,::before,::after {  box-sizing: border-box; /* 1 */  border-width: 0; /* 2 */  border-style: solid; /* 2 */  border-color: currentColor; /* 2 */}/* * Ensure horizontal rules are visible by default *//** * Undo the \\\\\\\\\`border-style: none\\\\\\\\\` reset that Normalize applies to images so that * our \\\\\\\\\`border-{width}\\\\\\\\\` utilities have the expected effect. * * The Normalize reset is unnecessary for us since we default the border-width * to 0 on all elements. * * https://github.com/tailwindcss/tailwindcss/issues/362 *//** * Override legacy focus reset from Normalize with modern Firefox focus styles. * * This is actually an improvement over the new defaults in Firefox in our testing, * as it triggers the better focus styles even for links, which still use a dotted * outline in Firefox by default. *//** * Reset links to optimize for opt-in styling instead of * opt-out. *//** * Reset form element properties that are easy to forget to * style explicitly so you don\\"t inadvertently introduce * styles that deviate from your design system. These styles * supplement a partial reset that is already applied by * normalize.css. *//** * Use the configured \\"mono\\" font family for elements that * are expected to be rendered with a monospace font, falling * back to the system monospace stack if there is no configured * \\"mono\\" font family. *//** * 1. Make replaced elements \\\\\\\\\`display: block\\\\\\\\\` by default as that\\"s *    the behavior you want almost all of the time. Inspired by *    CSS Remedy, with \\\\\\\\\`svg\\\\\\\\\` added as well. * *    https://github.com/mozdevs/cssremedy/issues/14 *  * 2. Add \\\\\\\\\`vertical-align: middle\\\\\\\\\` to align replaced elements more *    sensibly by default when overriding \\\\\\\\\`display\\\\\\\\\` by adding a *    utility like \\\\\\\\\`inline\\\\\\\\\`. * *    This can trigger a poorly considered linting error in some *    tools but is included by design. *  *    https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210 *//** * Constrain images and videos to the parent width and preserve * their intrinsic aspect ratio. * * https://github.com/mozdevs/cssremedy/issues/14 *//** * Ensure the default browser behavior of the \\\\\\\\\`hidden\\\\\\\\\` attribute. */*, ::before, ::after { --tw-translate-x: 0; --tw-translate-y: 0; --tw-rotate: 0; --tw-skew-x: 0; --tw-skew-y: 0; --tw-scale-x: 1; --tw-scale-y: 1; --tw-transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); --tw-ring-offset-shadow: 0 0 #0000; --tw-ring-shadow: 0 0 #0000; --tw-shadow: 0 0 #0000;}.flex { display: flex;}.w-6\\\\\\\\/12 { width: 50%;}.transform { transform: var(--tw-transform);}.flex-col { flex-direction: column;}.bg-\\\\\\\\[\\\\\\\\#343da3\\\\\\\\] { --tw-bg-opacity: 1; background-color: rgba(52, 61, 163, var(--tw-bg-opacity));}.text-\\\\\\\\[3em\\\\\\\\] { font-size: 3em;}.text-\\\\\\\\[\\\\\\\\#dedede\\\\\\\\] { --tw-text-opacity: 1; color: rgba(222, 222, 222, var(--tw-text-opacity));}.shadow { --tw-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06); box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);}.transition { transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter; transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter; transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 150ms;}.duration-500 { transition-duration: 500ms;}.hover\\\\\\\\:scale-110:hover { --tw-scale-x: 1.1; --tw-scale-y: 1.1; transform: var(--tw-transform);}';
"
`;

exports[`basic-component given basic component *with* tailwindcss styles, should output tailwind styles appended 1`] = `
"/* eslint-disable */
import { registerInstance as __stencil_registerInstance } from \\"@stencil/core\\";
import { Component, Host, h } from \\"@stencil/core\\";
import basicComponentStyle from \\"./basic-component.css?tag=basic-component&encapsulation=shadow\\";
export const BasicComponent = class {
    constructor(hostRef) {
        __stencil_registerInstance(this, hostRef);
    }
    render() {
        return (h(Host, null, h(\\"div\\", { class: \\"flex flex-col bg-[#343da3] text-[3em] text-[#dedede] w-6/12 transform transition duration-500 hover:scale-110\\" }, h(\\"slot\\", null))));
    }
};
BasicComponent.style = basicComponentStyle + '/*! tailwindcss v2.2.9 | MIT License | https://tailwindcss.com*//*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */*,:after,:before{--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-transform:translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;border:0 solid;box-sizing:border-box}.flex{display:flex}.w-6\\\\\\\\/12{width:50%}.transform{transform:var(--tw-transform)}.flex-col{flex-direction:column}.bg-\\\\\\\\[\\\\\\\\#343da3\\\\\\\\]{--tw-bg-opacity:1;background-color:rgba(52,61,163,var(--tw-bg-opacity))}.text-\\\\\\\\[3em\\\\\\\\]{font-size:3em}.text-\\\\\\\\[\\\\\\\\#dedede\\\\\\\\]{--tw-text-opacity:1;color:rgba(222,222,222,var(--tw-text-opacity))}.shadow{--tw-shadow:0 1px 3px 0 rgba(0,0,0,0.1),0 1px 2px 0 rgba(0,0,0,0.06);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.transition{transition-duration:.15s;transition-property:background-color,border-color,color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:background-color,border-color,color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:background-color,border-color,color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1)}.duration-500{transition-duration:.5s}.hover\\\\\\\\:scale-110:hover{--tw-scale-x:1.1;--tw-scale-y:1.1;transform:var(--tw-transform)}';
"
`;

exports[`basic-component given basic component *with* tailwindcss styles, should strip comments 1`] = `
"/* eslint-disable */
import { registerInstance as __stencil_registerInstance } from \\"@stencil/core\\";
import { Component, Host, h } from \\"@stencil/core\\";
import basicComponentStyle from \\"./basic-component.css?tag=basic-component&encapsulation=shadow\\";
export const BasicComponent = class {
    constructor(hostRef) {
        __stencil_registerInstance(this, hostRef);
    }
    render() {
        return (h(Host, null, h(\\"div\\", { class: \\"flex flex-col bg-[#343da3] text-[3em] text-[#dedede] w-6/12 transform transition duration-500 hover:scale-110\\" }, h(\\"slot\\", null))));
    }
};
BasicComponent.style = basicComponentStyle + '*,:after,:before{--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-transform:translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;border:0 solid;box-sizing:border-box}.flex{display:flex}.w-6\\\\\\\\/12{width:50%}.transform{transform:var(--tw-transform)}.flex-col{flex-direction:column}.bg-\\\\\\\\[\\\\\\\\#343da3\\\\\\\\]{--tw-bg-opacity:1;background-color:rgba(52,61,163,var(--tw-bg-opacity))}.text-\\\\\\\\[3em\\\\\\\\]{font-size:3em}.text-\\\\\\\\[\\\\\\\\#dedede\\\\\\\\]{--tw-text-opacity:1;color:rgba(222,222,222,var(--tw-text-opacity))}.shadow{--tw-shadow:0 1px 3px 0 rgba(0,0,0,0.1),0 1px 2px 0 rgba(0,0,0,0.06);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.transition{transition-duration:.15s;transition-property:background-color,border-color,color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:background-color,border-color,color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:background-color,border-color,color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1)}.duration-500{transition-duration:.5s}.hover\\\\\\\\:scale-110:hover{--tw-scale-x:1.1;--tw-scale-y:1.1;transform:var(--tw-transform)}';
"
`;

exports[`basic-component given basic component with no tailwindcss styles, should output unaltered styles 1`] = `
"/* eslint-disable */
import { registerInstance as __stencil_registerInstance } from \\"@stencil/core\\";
import { Component, Host, h } from \\"@stencil/core\\";
import basicComponentStyle from \\"./basic-component.css?tag=basic-component&encapsulation=shadow\\";
export const BasicComponent = class {
    constructor(hostRef) {
        __stencil_registerInstance(this, hostRef);
    }
    render() {
        return (h(Host, null, h(\\"slot\\", null)));
    }
};
BasicComponent.style = basicComponentStyle + '/*! tailwindcss v2.2.9 | MIT License | https://tailwindcss.com*//*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */*,:after,:before{--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;border:0 solid;box-sizing:border-box}.shadow{--tw-shadow:0 1px 3px 0 rgba(0,0,0,0.1),0 1px 2px 0 rgba(0,0,0,0.06);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}';
"
`;
