// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`configuration given *no* configuration should set default options 1`] = `
Object {
  "atImportConf": Object {},
  "enableDebug": false,
  "enablePurge": true,
  "minify": true,
  "purgeExtractor": [Function],
  "purgeSafeList": Array [
    ":root",
    ":host",
    ":shadow",
    "/deep/",
    "::part",
    "::theme",
  ],
  "stripComments": false,
  "tailwindConf": Object {
    "darkMode": false,
    "mode": "jit",
    "plugins": Array [],
    "purge": Array [],
  },
  "tailwindCssContents": "@tailwind base;@tailwind utilities;@tailwind components;",
  "tailwindCssPath": undefined,
}
`;

exports[`configuration given configuration should set options 1`] = `
Object {
  "atImportConf": Object {},
  "enableDebug": true,
  "enablePurge": false,
  "minify": false,
  "purgeExtractor": [Function],
  "purgeSafeList": Array [
    "Im",
    "safe",
  ],
  "stripComments": true,
  "tailwindConf": Object {
    "darkMode": false,
    "mode": "jit",
    "plugins": Array [],
    "purge": Object {
      "content": Array [
        "./src/**/*.html",
        "./src/**/*.js",
        "./src/**/*.jsx",
        "./src/**/*.tsx",
      ],
      "enabled": true,
    },
    "theme": Object {
      "extend": Object {},
    },
    "variants": Object {
      "extend": Object {},
    },
  },
  "tailwindCssContents": "@tailwind base;
",
  "tailwindCssPath": "src/test/configuration/tailwindcss.css",
}
`;

exports[`configuration given configuration that does imports to another css file, should set options 1`] = `
Object {
  "atImportConf": Object {
    "path": Array [
      "src/test/configuration",
    ],
  },
  "enableDebug": false,
  "enablePurge": true,
  "minify": true,
  "purgeExtractor": [Function],
  "purgeSafeList": Array [
    ":root",
    ":host",
    ":shadow",
    "/deep/",
    "::part",
    "::theme",
  ],
  "stripComments": false,
  "tailwindConf": Object {
    "darkMode": false,
    "mode": "jit",
    "plugins": Array [],
    "purge": Array [],
  },
  "tailwindCssContents": "@import 'tailwindcss.css';
",
  "tailwindCssPath": "src/test/configuration/tailwind.atimport.css",
}
`;

exports[`configuration given configuration that does imports to another css file, should set options 2`] = `"/*! tailwindcss v2.2.4 | MIT License | https://tailwindcss.com*//*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */*,:after,:before{--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-transform:translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));--tw-border-opacity:1;--tw-shadow:0 0 #0000;--tw-ring-inset:var(--tw-empty,/*!*/ /*!*/);--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-blur:var(--tw-empty,/*!*/ /*!*/);--tw-brightness:var(--tw-empty,/*!*/ /*!*/);--tw-contrast:var(--tw-empty,/*!*/ /*!*/);--tw-grayscale:var(--tw-empty,/*!*/ /*!*/);--tw-hue-rotate:var(--tw-empty,/*!*/ /*!*/);--tw-invert:var(--tw-empty,/*!*/ /*!*/);--tw-saturate:var(--tw-empty,/*!*/ /*!*/);--tw-sepia:var(--tw-empty,/*!*/ /*!*/);--tw-drop-shadow:var(--tw-empty,/*!*/ /*!*/);--tw-filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);--tw-backdrop-blur:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-brightness:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-contrast:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-grayscale:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-hue-rotate:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-invert:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-opacity:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-saturate:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-sepia:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);border:0 solid;border-color:rgba(229,231,235,var(--tw-border-opacity));box-sizing:border-box}"`;

exports[`configuration given modified default configuration should set default options 1`] = `
Object {
  "atImportConf": Object {},
  "enableDebug": false,
  "enablePurge": true,
  "minify": true,
  "purgeExtractor": [Function],
  "purgeSafeList": Array [
    ":root",
    ":host",
    ":shadow",
    "/deep/",
    "::part",
    "::theme",
  ],
  "stripComments": true,
  "tailwindConf": Object {
    "darkMode": false,
    "mode": "jit",
    "plugins": Array [],
    "purge": Array [],
  },
  "tailwindCssContents": "@tailwind base;@tailwind utilities;@tailwind components;",
  "tailwindCssPath": undefined,
}
`;
